{"version":3,"file":"static/js/120.64925676.chunk.js","mappings":"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gBAAK8B,UAAU,kBAAf,UACE,gBAAKA,UAAU,MAAf,UACE,SAAC,EAAD,CAAYY,UAAWA,a,8HC1CjC,IAAMlD,EAAQ,CACZ,QACA,cACA,YACA,SACA,sBACA,SACA,oBACA,UACA,YACA,QACA,WACA,UACA,UAEA,iBACA,YACA,SACA,cACA,aACA,aACA,YAEA,eACA,iBACA,cACA,gBAEA,UACA,MACA,2CACA,YAEA,aACA,QACA,UACA,mBACA,oBACA,SACA,SACA,eAEIP,EAAM,CACV,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEI0C,EAAS,CACb,qFACA,kFACA,yFACA,sFACA,uFACA,sFACA,0FACA,uFACA,yFACA,qFACA,oFACA,uFACA,uFAEA,sFACA,yFACA,sFACA,2FACA,oFACA,qFACA,yFAEA,wFACA,kFACA,2FACA,kFAEA,uFACA,mFACA,mFACA,mFAEA,0FACA,qFACA,uFACA,wFACA,kFACA,sFACA,qFACA,qFACA,sFAEI3C,EAAO,CACX,QACA,cACA,YACA,SACA,sBACA,SACA,oBACA,UACA,YACA,QACA,WACA,UACA,UACA,iBACA,YACA,SACA,cACA,aACA,aACA,YACA,eACA,iBACA,cACA,gBACA,UACA,MACA,yCACA,YACA,aACA,QACA,UACA,mBACA,oBACA,SACA,SACA,cACA","sources":["Components/Functions/axios.js","Components/State/StateCard.js","Components/State/StateTable.js","Pages/Home.js","Resources/ISOCode.js"],"sourcesContent":["import axios from \"axios\";\r\nimport objectToArray from \"object-to-array\";\r\nimport { ISO, name, slugs } from \"../../Resources/ISOCode.js\";\r\nconst getStateDetailAxios = async (code) => {\r\n  const result = await axios({\r\n    method: \"GET\",\r\n    url: \"https://data.incovid19.org/v4/min/data.min.json\",\r\n  });\r\n\r\n  return result.data[code];\r\n};\r\nconst getEveryDetailAxios = async () => {\r\n  const result = await axios({\r\n    method: \"GET\",\r\n    url: \"https://data.incovid19.org/v4/min/data.min.json\",\r\n  });\r\n\r\n  const res = objectToArray(result.data);\r\n  let statesArr = [];\r\n\r\n  for (let i = 0; i < res.length; i++) {\r\n    let curr = res[i];\r\n    if (curr[0] === \"TT\") {\r\n      continue;\r\n    }\r\n    let x = curr[1].delta?.deceased ? curr[1].delta.deceased : 0;\r\n    let y = curr[1].delta?.tested ? curr[1].delta?.tested : \"Not Available\";\r\n    statesArr.push({\r\n      name: name[ISO.indexOf(curr[0])],\r\n      confirmed: curr[1].delta.confirmed,\r\n      recovered: curr[1].delta.recovered,\r\n      deceased: x,\r\n      vaccinated1: curr[1].delta.vaccinated1,\r\n      vaccinated2: curr[1].delta.vaccinated2,\r\n      vaccinated3: curr[1].delta.vaccinated3,\r\n      tested: y,\r\n      slug: `<Link>/state/${slugs[ISO.indexOf(curr[0])]}</Link>`,\r\n    });\r\n  }\r\n  statesArr.sort((a, b) => {\r\n    if (a.name.toUpperCase() < b.name.toUpperCase()) {\r\n      return -1;\r\n    } else return 1;\r\n  });\r\n\r\n  return statesArr;\r\n};\r\n\r\nexport { getStateDetailAxios, getEveryDetailAxios };\r\n","import * as React from \"react\";\r\n\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\n\r\nimport CardContent from \"@mui/material/CardContent\";\r\n\r\nimport Avatar from \"@mui/material/Avatar\";\r\n\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { ISO, images, name } from \"../../Resources/ISOCode.js\";\r\nexport default function StateCard({ total, meta }) {\r\n  let { state } = useSelector((state) => ({ ...state }));\r\n  let indexIs;\r\n  if (state) {\r\n    indexIs = ISO.indexOf(state);\r\n  } else {\r\n    indexIs = ISO.indexOf(\"IN\");\r\n  }\r\n  if (!state) {\r\n    state = \"IN\";\r\n  }\r\n\r\n  //creatimg an object out of it..........\r\n  let totalObject = {};\r\n  for (let i = 0; i < total.length; i++) {\r\n    const newArr = total[i];\r\n    totalObject[newArr[0]] = newArr[1];\r\n  }\r\n\r\n  const [R, G, B] = [\r\n    Math.floor(Math.random() * 255),\r\n    Math.floor(Math.random() * 255),\r\n    Math.floor(Math.random() * 255),\r\n  ];\r\n  document.title = `Covid Counter | ${name[indexIs]}`;\r\n  return (\r\n    <center>\r\n      <Card sx={{ maxWidth: 345 }}>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar sx={{ bgcolor: `rgb(${R},${G},${B})` }} aria-label=\"state\">\r\n              {state}\r\n            </Avatar>\r\n          }\r\n          title={name[indexIs]}\r\n          subheader={`Updated : ${JSON.stringify(\r\n            new Date(meta).toLocaleString(\"en-IN\")\r\n          )}`}\r\n        />\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"194\"\r\n          style={{ objectFit: \"contain\" }}\r\n          image={images[indexIs]}\r\n          alt=\"Paella dish\"\r\n        />\r\n\r\n        <CardContent>\r\n          {\" \"}\r\n          <Typography color=\"text.secondary\">\r\n            <div className=\"row\">\r\n              <div\r\n                className=\"col-md-6\"\r\n                style={{\r\n                  color: \"red\",\r\n                  fontWeight: \"bold\",\r\n                  fontFamily: \"Telex\",\r\n                  fontSize: \"14px\",\r\n                }}\r\n              >\r\n                {totalObject.confirmed && (\r\n                  <p>\r\n                    Confirmed : {totalObject.confirmed.toLocaleString(\"en-IN\")}{\" \"}\r\n                  </p>\r\n                )}\r\n              </div>\r\n              <div\r\n                className=\"col-md-6\"\r\n                style={{\r\n                  color: \"green\",\r\n                  fontWeight: \"bold\",\r\n                  fontSize: \"14px\",\r\n                  fontFamily: \"Telex\",\r\n                }}\r\n              >\r\n                {totalObject.recovered && (\r\n                  <p>\r\n                    Recovered : {totalObject.recovered.toLocaleString(\"en-IN\")}{\" \"}\r\n                  </p>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div\r\n                className=\"col-md-6\"\r\n                style={{\r\n                  color: \"grey\",\r\n                  fontWeight: \"bold\",\r\n                  fontFamily: \"Telex\",\r\n                  fontSize: \"14px\",\r\n                }}\r\n              >\r\n                {totalObject.deceased && (\r\n                  <p>\r\n                    Deceased : {totalObject.deceased.toLocaleString(\"en-IN\")}{\" \"}\r\n                  </p>\r\n                )}\r\n              </div>\r\n              <div\r\n                className=\"col-md-6\"\r\n                style={{\r\n                  color: \"blue\",\r\n                  fontWeight: \"bold\",\r\n                  fontFamily: \"Telex\",\r\n                  fontSize: \"14px\",\r\n                }}\r\n              >\r\n                {totalObject.tested && (\r\n                  <p>Tested : {totalObject.tested.toLocaleString(\"en-IN\")} </p>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </center>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\n\r\nconst columns = [\r\n  { id: \"name\", label: \"Name\", maxWidth: 100 },\r\n  {\r\n    id: \"confirmed\",\r\n    label: \"Confirmed\",\r\n    minWidth: 100,\r\n    align: \"center\",\r\n    format: (value) => value.toLocaleString(\"en-IN\"),\r\n  },\r\n  {\r\n    id: \"recovered\",\r\n    label: \"Recovered\",\r\n    minWidth: 100,\r\n    align: \"center\",\r\n    format: (value) => value.toLocaleString(\"en-IN\"),\r\n  },\r\n  {\r\n    id: \"deceased\",\r\n    label: \"Deceased\",\r\n    minWidth: 100,\r\n    align: \"center\",\r\n    format: (value) => value.toLocaleString(\"en-IN\"),\r\n  },\r\n  {\r\n    id: \"vaccinated1\",\r\n    label: \"Vaccinated-1\",\r\n    minWidth: 100,\r\n    align: \"center\",\r\n    format: (value) => value.toLocaleString(\"en-IN\"),\r\n  },\r\n  {\r\n    id: \"vaccinated2\",\r\n    label: \"Vaccinated-2\",\r\n    minWidth: 100,\r\n    align: \"center\",\r\n    format: (value) => value.toLocaleString(\"en-IN\"),\r\n  },\r\n  {\r\n    id: \"vaccinated3\",\r\n    label: \"Vaccinated-3\",\r\n    minWidth: 100,\r\n    align: \"center\",\r\n    format: (value) => value.toLocaleString(\"en-IN\"),\r\n  },\r\n  {\r\n    id: \"tested\",\r\n    label: \"Tested\",\r\n    minWidth: 100,\r\n    align: \"center\",\r\n    format: (value) => value.toLocaleString(\"en-IN\"),\r\n  },\r\n];\r\n\r\nexport default function StickyHeadTable({ stateWise }) {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const rows = stateWise;\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\r\n      <TableContainer sx={{ maxHeight: 440 }}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row, index) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format && typeof value === \"number\"\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  getStateDetailAxios,\r\n  getEveryDetailAxios,\r\n} from \"../Components/Functions/axios.js\";\r\nimport objectToArray from \"object-to-array\";\r\nimport StateCard from \"../Components/State/StateCard.js\";\r\nimport StateTable from \"../Components/State/StateTable.js\";\r\nconst Home = () => {\r\n  document.title = `Covid Counter`;\r\n  const [total, setTotal] = useState([]);\r\n  const [meta, setMeta] = useState([]);\r\n  const [stateWise, setStateWise] = useState([]);\r\n  useEffect(() => {\r\n    getCasesIndia();\r\n  }, []);\r\n  useEffect(() => {\r\n    getAllCasesIndia();\r\n  }, []);\r\n  const getCasesIndia = () => {\r\n    getStateDetailAxios(\"TT\")\r\n      .then((res) => {\r\n        setTotal(objectToArray(res.delta));\r\n        setMeta(res.meta?.last_updated);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  const getAllCasesIndia = () => {\r\n    getEveryDetailAxios()\r\n      .then((res) => {\r\n        setStateWise(res);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StateCard total={total} meta={meta} />\r\n\r\n      <hr />\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <StateTable stateWise={stateWise} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","const slugs = [\r\n  \"bihar\",\r\n  \"west-bengal\",\r\n  \"jharkhand\",\r\n  \"odisha\",\r\n  \"andaman-and-nicobar\",\r\n  \"sikkim\",\r\n  \"arunachal-pradesh\",\r\n  \"mizoram\",\r\n  \"meghalaya\",\r\n  \"assam\",\r\n  \"nagaland\",\r\n  \"tripura\",\r\n  \"manipur\",\r\n  //for south zone\r\n  \"andhra-pradesh\",\r\n  \"karnataka\",\r\n  \"kerala\",\r\n  \"lakshadweep\",\r\n  \"puducherry\",\r\n  \"tamil-nadu\",\r\n  \"telangana\",\r\n  //central zones\r\n  \"chhattisgarh\",\r\n  \"madhya-pradesh\",\r\n  \"maharashtra\",\r\n  \"uttar-pradesh\",\r\n  //for west zone.\r\n  \"gujarat\",\r\n  \"goa\",\r\n  \"dadra-and-nagar-haveli-and-daman-and-diu\",\r\n  \"rajasthan\",\r\n  //for north zone....\r\n  \"chandigarh\",\r\n  \"delhi\",\r\n  \"haryana\",\r\n  \"himachal-pradesh\",\r\n  \"jammu-and-kashmir\",\r\n  \"ladakh\",\r\n  \"punjab\",\r\n  \"uttarakhand\",\r\n];\r\nconst ISO = [\r\n  \"BR\",\r\n  \"WB\",\r\n  \"JH\",\r\n  \"OR\",\r\n  \"AN\",\r\n  \"SK\",\r\n  \"AR\",\r\n  \"MZ\",\r\n  \"ML\",\r\n  \"AS\",\r\n  \"NL\",\r\n  \"TR\",\r\n  \"MN\",\r\n  \"AP\",\r\n  \"KA\",\r\n  \"KL\",\r\n  \"LD\",\r\n  \"PY\",\r\n  \"TN\",\r\n  \"TG\",\r\n  \"CT\",\r\n  \"MP\",\r\n  \"MH\",\r\n  \"UP\",\r\n  \"GJ\",\r\n  \"GA\",\r\n  \"DN\",\r\n  \"RJ\",\r\n  \"CH\",\r\n  \"DL\",\r\n  \"HR\",\r\n  \"HP\",\r\n  \"JK\",\r\n  \"LA\",\r\n  \"PB\",\r\n  \"UT\",\r\n  \"IN\",\r\n];\r\nconst images = [\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642609186/COVID/BIHAR_le3fbq.png\",\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642655221/COVID/wb_pllhyb.png\",\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642654877/COVID/JHARKHAND_yde1fy.png\",\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642655319/COVID/odisha_xv6oom.png\",\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642655325/COVID/andaman_u4ryk8.jpg\",\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642686856/COVID/sikkim_cqnsio.png\",\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642686856/COVID/arunacahal_o2zulx.png\",\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642686855/COVID/mizoram_eeb6z5.png\",\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642686855/COVID/meghalaya_ldme2b.png\",\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642686856/COVID/assam_rnnhji.png\",\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642686855/COVID/naga_b8zyqm.png\",\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642686855/COVID/tripura_wsqdop.png\",\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642686854/COVID/manipur_gep4yl.png\",\r\n  //for south india\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642689940/COVID/andhra_ofgjhj.png\",\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642689940/COVID/karnataka_njno7n.png\",\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642689939/COVID/kerala_qe3y5d.png\",\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642689939/COVID/lakshadweep_mfqxeo.png\",\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642689940/COVID/pudu_hnwcpf.png\",\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642689940/COVID/tamil_ihd4ln.png\",\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642689939/COVID/telangana_w19nhe.png\",\r\n  //central zone.........\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642690196/COVID/chhatisg_hnqvlu.png\",\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642690196/COVID/mp_njzgjc.png\",\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642690196/COVID/maharashtra_ym1ptt.png\",\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642690196/COVID/up_gii2f2.png\",\r\n  //west zone.........\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642690352/COVID/gujarat_euzy9j.png\",\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642690352/COVID/ddd_ncck65.png\",\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642690352/COVID/ddd_ncck65.png\",\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642706024/COVID/RAJ_dpfskx.png\",\r\n  //north india.....\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642690639/COVID/chandigarh_ne8dx6.png\",\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642690640/COVID/delhi_evkiws.png\",\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642690640/COVID/haryana_dvm6io.png\",\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642690639/COVID/himachal_ztab98.png\",\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642690639/COVID/jk_gyzbwn.png\",\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642690638/COVID/ladakh_bixucp.png\",\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642690638/COVID/punja_pdrxyg.png\",\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642690638/COVID/punja_pdrxyg.png\",\r\n  \"https://res.cloudinary.com/techbuy/image/upload/v1642693937/COVID/india_rwvlkg.jpg\",\r\n];\r\nconst name = [\r\n  \"Bihar\",\r\n  \"West Bengal\",\r\n  \"Jharkhand\",\r\n  \"Odisha\",\r\n  \"Andaman and Nicobar\",\r\n  \"Sikkim\",\r\n  \"Arunachal Pradesh\",\r\n  \"Mizoram\",\r\n  \"Meghalaya\",\r\n  \"Assam\",\r\n  \"Nagaland\",\r\n  \"Tripura\",\r\n  \"Manipur\",\r\n  \"Andhra Pradesh\",\r\n  \"Karnataka\",\r\n  \"Kerala\",\r\n  \"Lakshadweep\",\r\n  \"Puducherry\",\r\n  \"Tamil Nadu\",\r\n  \"Telangana\",\r\n  \"Chhattisgarh\",\r\n  \"Madhya Pradesh\",\r\n  \"Maharashtra\",\r\n  \"Uttar Pradesh\",\r\n  \"Gujarat\",\r\n  \"Goa\",\r\n  \"Dadra and Nagar Haveli and Daman & Diu\",\r\n  \"Rajasthan\",\r\n  \"Chandigarh\",\r\n  \"Delhi\",\r\n  \"Haryana\",\r\n  \"Himachal Pradesh\",\r\n  \"Jammu and Kashmir\",\r\n  \"Ladakh\",\r\n  \"Punjab\",\r\n  \"Uttarakhand\",\r\n  \"India\",\r\n];\r\n\r\nexport { slugs, ISO, images, name };\r\n"],"names":["getStateDetailAxios","code","axios","method","url","result","data","getEveryDetailAxios","res","objectToArray","statesArr","i","length","curr","x","delta","deceased","y","tested","push","name","ISO","confirmed","recovered","vaccinated1","vaccinated2","vaccinated3","slug","slugs","sort","a","b","toUpperCase","StateCard","indexIs","total","meta","useSelector","state","totalObject","newArr","Math","floor","random","R","G","B","document","title","sx","maxWidth","avatar","bgcolor","subheader","JSON","stringify","Date","toLocaleString","component","height","style","objectFit","image","images","alt","color","className","fontWeight","fontFamily","fontSize","columns","id","label","minWidth","align","format","value","StickyHeadTable","stateWise","React","page","setPage","rowsPerPage","setRowsPerPage","rows","Paper","width","overflow","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","TableBody","slice","row","index","hover","role","tabIndex","TablePagination","rowsPerPageOptions","count","onPageChange","event","newPage","onRowsPerPageChange","target","useState","setTotal","setMeta","setStateWise","useEffect","getCasesIndia","getAllCasesIndia","then","last_updated","catch","err","console","log"],"sourceRoot":""}